This is your PID:

Project name: ByeAI – a crowdsourced browser extension to hide AI‑generated YouTube videos
Document version: v 0.9 (6 July 2025)
Author / owner: You (solo founder)
1  Purpose & Vision
Large language and vision models are enabling a flood of low‑effort, AI‑generated content on YouTube. ByeAI’s goal is to put curation back in viewers’ hands:

Personal control. One click lets a user hide (“block”) any video they believe is AI‑generated.

Collective quality filter. When a community‑defined threshold of independent users flags the same video, it disappears for all ByeAI users.

Privacy first. No accounts, no personal identifiers; only anonymous, opt‑in telemetry.

Open ecosystem. Code and crowdsourced dataset are open‑source to encourage trust, review and reuse.

2  Objectives (MVP)
#	Objective	Success KPI (M‑3 after launch)
O1	Release Chrome‑compatible WebExtension that hides flagged videos on YouTube home, search, “up next”, and sidebar.	≥ 2 000 active Chrome users
O2	Implement category picker with six labels: AI‑script, AI‑image/thumbnail, AI‑music, AI‑voice‑over, Deepfake/video, Other.	≥ 70 % of submitted flags include a category
O3	Ship community threshold & reputation system that removes a flagged video for everyone once the score ≥ T (see §5).	≤ 5 % false‑positive appeals in the first 90 days
O4	Provide local “Blocked items” tab with undo/clear‑all.	≤ 1 % of hides are undone within 24 h
O5	Offer opt‑in anonymous usage analytics.	≥ 60 % users opt‑in

3  Scope
In scope (MVP)

Google Chrome / Chromium (Manifest V3).

YouTube.com (web only).

Community API (read/write JSON over HTTPS, SponsorBlock‑style).

Local storage of personal blocks until manual clear.

Settings page (ban scope selector, analytics opt‑in/out).

Out of scope (for MVP)

Instagram, TikTok, Shorts‑only playback.

Formal dispute/appeal workflow for creators.

Machine‑learning detection pipeline (deferred to Phase 2).

4  High‑level Functional Requirements
ID	Requirement
FR‑1	Detect YouTube video IDs present in DOM and query backend for flag status.
FR‑2	Hide flagged tiles; maintain layout integrity (fill with blank div, no “ghost”).
FR‑3	Context‑menu / toolbar button “Mark as AI‑generated → pick category”.
FR‑4	Submit flag: {videoId, category, clientHash, timestamp} via POST.
FR‑5	Display unblock/undo snackbar for 10 s after action.
FR‑6	Local “Blocked Items” UI lists IDs with “Unhide” per row and “Clear‑all”.
FR‑7	Settings: ban scope selector (all / scripts / images …), analytics toggle, export/import local list.
NFR‑1	Privacy: no unique identifiers stored; clientHash = 128‑bit random UUID generated on first install.
NFR‑2	Performance: ≤ 50 ms added paint time per page; ≤ 50 kB JS payload.
NFR‑3	Accessibility: all UI operable via keyboard; ARIA labels present.
NFR‑4	Internationalisation‑ready (strings in JSON).

5  Consensus & Reputation Algorithm (proposal)
Term	Definition
u	individual user (anonymous UUID)
rᵤ	user reputation ∈ [1, ∞). Starts at 1.
vᵤ	vote by user u ∈ {+1 (flag AI), –1 (disagree)}
S	video score = Σ rᵤ × vᵤ

Reputation update
+1 rep when user’s vote ultimately matches consensus.

–1 rep when their vote is overturned (score moves below –2 – identical to SponsorBlock’s removal threshold) 
wiki.sponsor.ajay.app

rᵤ = 1 + log₂(max(1, repPoints))

Global‑block threshold T(viewCount)
T = max(15 , ⌈0.05 × √viewCount⌉ )

Examples:

Views	T
1 000	15
100 000	15
1 000 000	50
10 000 000	158

This keeps small channels protected from brigading yet scales for viral videos. (Values tuned so that a 1 M‑view video needs roughly 0.005 % of viewers to agree.) Inspired by SponsorBlock’s logarithmic weighting 
blog.ajay.app
.

6  Solution Architecture
pgsql
Copy
┌────────────┐                ┌────────────────────────┐
│ Chrome Ext │──GET /flags──► │  ByeAI API (FastAPI)   │
│ Manifest V3│◄─POST /vote─── │  ▸ PostgreSQL + Postg  │
│ React/TS   │                └─────────┬──────────────┘
└────────────┘                          │
        ▲                               ▼
        │                    Public read‑only dumps
        │                          (AWS S3)
 Local IndexedDB
 (user blocks, opts)
Hosting: cheapest AWS Lightsail VPS (A$10/mo) fits the < A$300 budget for year 1.

Data dumps: nightly export to S3 enables community mirrors.

Telemetry/analytics: Plausible self‑hosted, triggered only if analytics=true.

7  Licensing & Open‑Source
Component	License recommendation	Rationale
Browser extension	MIT	Minimal restrictions; maximises adoption; widely used in SponsorBlock‑adjacent projects 
github.com
Server & dataset	AGPL‑3.0	Ensures any hosted forks contribute improvements back (mirrors SponsorBlock Server’s choice) 
github.com
ML models (Phase 2)	Apache‑2.0	Patent grant helpful if model IP becomes valuable

8  Timeline & Milestones (assumes one part‑time developer)
Week	Deliverable
0‑1	Approve PID, create GitHub org, choose license
2‑4	Prototype DOM observer + local hide logic
5‑6	Build minimal FastAPI + Postgres API, Dockerised
7	Implement vote submission & fetch; unit tests
8	Reputation + threshold logic; nightly data dump
9	Options page (ban scope, analytics)
10	Blocked‑items UI + undo; performance tuning
11	Internal beta, fix issues
12	Publish on Chrome Web Store (A$5 one‑time fee)
13‑15	Collect feedback, prepare v1.1 cross‑browser port (Firefox & Edge)

Contingency: 2 weeks
Target public MVP launch: mid‑October 2025 (13 weeks).

9  Budget (AUD, Year 1)
Item	Cost
Chrome Web Store listing	$ 5 (one‑off)
AWS Lightsail 2 GB VPS	$ 150
AWS S3 (50 GB × 12 mo)	$ 40
Domain (byeai.org)	$ 18
Misc. SSL, monitoring	$ 20
Total	$ 233

Leaves ~A$67 headroom under the A$300 cap.

10  Risks & Mitigations
Risk	Likelihood	Impact	Mitigation
YouTube TOS changes / legal push‑back	Medium	High	Limit to client‑side CSS hiding (no API manipulation); monitor policy updates monthly.
Brigading/false flags	Medium	Medium	Reputation + dynamic threshold; manual moderator override planned Phase 1.1.
Privacy concerns	Low	High	No accounts, hashed client IDs, GDPR‑style privacy notice.
Cost overrun	Low	Medium	Strict use of free/open‑source stack; single low‑spec VPS.
Solo‑developer bandwidth	Medium	Medium	Keep scope narrow; invite community PRs after launch.

11  Assumptions & Dependencies
YouTube DOM structure remains sufficiently stable for selectors.

Community goodwill supplies enough early votes to reach thresholds.

No ads or monetisation in MVP, so no immediate revenue needed.

12  Open Questions / Next Decisions
Category UI wording – final labels & tool‑tips.

Exact analytics events to log (page‑view, hide action, error).

Moderation policy for clearly malicious flags before Phase 2.

Brand & logo – trademark clearance.

13  Approvals
Name / Role	Signature	Date
Project owner		
(Optional) Community advisor		

14  Appendices
A. SponsorBlock references – crowdsourced architecture and vote weighting 
wiki.sponsor.ajay.app
blog.ajay.app
.

B. License summaries – MIT vs AGPL key clauses 
en.wikipedia.org
.